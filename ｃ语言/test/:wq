/*************************************************************************
	> File Name: test.h
	> Author: ldc
	> Mail: litesla
	> Created Time: 2018年10月04日 星期四 17时53分30秒
 ************************************************************************/

#ifndef _TEST_H
#include <stdlib.h>


struct TestFuncDate{
    int total,expect_cnt;
};


#define EXPECT(func,value) ({\
    int temp;\
    printf("%s == %s %s\n", #func, #value, ((temp = (func == value)) ? "True" : "False"));\
    __date->total++;\
    __date->expect_cnt += temp;\
})


typedef void (*test_func_t)(struct TestFuncDate * );
typedef struct FuncDate{
    const char *a_str,*b_str;
    test_func_t func;
    struct FuncDate *next;
}FuncDate;

FuncDate *FuncDate_head = NULL;

FuncDate *getFuncDate(const char *a,const char *b,test_func_t func,FuncDate *next){
    FuncDate *p = (FuncDate *)malloc(sizeof(FuncDate));
    p->a_str = a;
    p->b_str = b;
    p->func = func;
    p->next = next;
    return p;
}
#define TEST(a, b) \
        void a##_haizei_##b(struct TestFuncDate * );\
        __attribute__((constructor))\
        void ADDFUNC ##a##_haizei_##b(){\
            FuncDate_head = getFuncDate(#a, #b,a##_haizei_##b,FuncDate_head);\
        }\
        void  a##_haizei_##b(struct TestFuncDate *__date)

int RUN_ALL_TEST(){
    FuncDate ret;
    ret.next = NULL;
    for(FuncDate * p = FuncDate_head,*q; p; p = q) {
        q = p->next;
        p->next = ret.next;
        ret.next = p;
    }
    FuncDate_head = ret.next;
    
    char color[3][100] = {
        "[ \033[1;32m%.2lf%\033[0m ] total:%d, expect_cnt : %d \n",
        "[ \033[0;31m%.2lf%\033[0m ] total:%d, expect_cnt : %d \n",
        "[ \033[1;31m%.2lf%\033[0m ] total:%d, expect_cnt : %d \n",
    };
    for(FuncDate *p = FuncDate_head; p;p = p->next) {
        struct TestFuncDate date = {0,0};
        printf("[%s %s]\n",p->a_str,p->b_str);
        p->func(&date);
        int index = 0;
        double rate = date.expect_cnt * 1.0/date.total * 100;
        if(rate  < 100) index = 1;
        if(rate < 50) index = 2;
        printf(color[index], rate, date.total, date.expect_cnt);
    }
    return 0;
}

#define _TEST_H

#ifdef _TEST_H 
#define _TEST_H 
#endif





